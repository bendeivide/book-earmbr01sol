[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R básico: Manual de soluções",
    "section": "",
    "text": "Bem-vindo\nEsse é um livro digital intitulado “R básico: Manual de soluções”, com o selo Democratizando Conhecimento (DC). Este livro é um convite ao manual de soluções do R básico, apresentando de forma sistemáticas as resoluções dos exercícios do livro referência. Fazemos uma abordagem teórica e aplicada utilizando scripts em código R.   O número de leitores que acessaram esse livro: \n\n\n \n\n\n\nLivro físico\nEste livro ainda se encontra em desenvolvimento!\n\n\nISBN\n\nISBN (Digital):\nISBN (Físico):\n\n\n\nLicença\n\n\n\n\n\nEste trabalho está sob a Licença Creative Commons - Atribuição-NãoComercial 4.0 Internacional.\n\n\n\n\n\n\n\nUsamos também a filosofia de trabalho com o Selo Democratizando Conhecimento (DC), que pode ser acessada em https://bendeivide.github.io/dc/. O leitor é livre para compartilhar, redistribuir, transformar ou adaptar esta obra, desde que não venha a utilizá-la em nenhuma atividade de propósito comercial. Por fim, a única exigência é a atribuição dos créditos aos autores da obra.\n\n\n \n\n\nComo citar\n\nComo citar essa obra (Impressa):\nComo citar essa obra (Digital):"
  },
  {
    "objectID": "prefacio.html",
    "href": "prefacio.html",
    "title": "Prefácio",
    "section": "",
    "text": "O R básico: Manual de Soluções vem com o propósito de detalhar as estratégias de como resolver os exercícios do livro R básico, enfatizando as estratégias com que as soluções podem ser desenvolvidas. Mostraremos mecanismos não apenas de como resolveremos os problemas, mas como eles podem ser abordados de forma didática para cursos ou disciplinas que utilizem o Ambiente R.\nPor fim, este livro vem complementar todo assunto introdutório do , para o entendimento via exercícios resolvidos, e esperamos que o leitor possa retirar ao máximo o que o pode oferecer.\n\nBen Dêivide de Oliveira Batista  Ouro Branco, MG, 2024-07-31"
  },
  {
    "objectID": "cap01.html#descrição-sobre-os-exercícios",
    "href": "cap01.html#descrição-sobre-os-exercícios",
    "title": "1  Entendendo a coleção Estudando o ambiente R",
    "section": "1.1 Descrição sobre os exercícios",
    "text": "1.1 Descrição sobre os exercícios\nA ideia dos exercícios deste capíyoututulo foi nortear o leitor aos problemas que podem ser deparados quando se estuda o . Desse modo, para leitores que conseguem resolver todos os exercícios deste capítulo, entendendo a profundidade do problema, poderá avançar na leitura dos próximos volumes da coleção Estudando o Ambiente R."
  },
  {
    "objectID": "cap01.html#objetivo",
    "href": "cap01.html#objetivo",
    "title": "1  Entendendo a coleção Estudando o ambiente R",
    "section": "1.2 Objetivo",
    "text": "1.2 Objetivo\nForam realizados exercícios envolvendo todos os temas dos 11 capítulos. O objetivo é fazer com que o leitor realize os exercícios e veja se domina os temas abordados no livro. Caso a resolução seja realizada com facilidade, não será necessário fazer toda a leitura do livro, para que haja uma melhor otimização de estudo a coleção Estudando o Ambiente R."
  },
  {
    "objectID": "cap01.html#assuntos-abordados",
    "href": "cap01.html#assuntos-abordados",
    "title": "1  Entendendo a coleção Estudando o ambiente R",
    "section": "1.3 Assuntos abordados",
    "text": "1.3 Assuntos abordados\nOs principais assuntos abordados deste capítulo são:\n\nPrincípios do R: (Exercício 1.6)\n\nObjeto\nFunção\nInterface (Exercícios 1.19, 1.20)\n\nPacotes:\n\nanexar pacotes (Exercícios 1.1, 1.4)\ncarregar pacotes (Exercício 1.1)\nNAMESPACE (Exercício 1.3)\nfunções internas de um pacote (Exercício 1.4)\n\nAmbientes:\n\nsuperatribuição (Exercícios 1.2, 1.6)\ncaminho de busca (Exercício 1.4)\nambiente envolvente (Exercícios 1.9,1.10)\nambiente de chamada (Exercícios 1.9, 1.10)\nambiente de execução (Exercícios 1.10)\n\nObjetos: (Exercício 2.5)\n\natribuição (Exercícios 1.5, 1.15)\nlista (Exercício 1.17)\nambiente (Exercício 2.3)\natributos (Exercício 2.1)\n\nintrínseco (Exercício 2.1)\nclass (Exercício 2.1)\n\n\nEstrutura de dados: (Exercício 2.5)\n\nvetor (Exercício 1.15)\nmatriz (Exercício 1.15)\narray (Exercício 1.15)\nquadro de dados (data frame) (Exercício 1.17)\n\nFunções:\n\nanônima (Exercício 1.8)\nchamada de função (Exercício 1.15)\nescopo (Exercício 2.3)\n\nléxico (Exercício 1.16)\n\nfunção print()(Exercício 2.4)\n\nComo R trabalha:\n\nscript (Exercícios 1.7, 1.16)\nlinhas de comando (Exercícios 1.5, 1.11, 2.4)\ncomentar um código (Exercício 1.13)\nRStudio (Exercício 1.14)\narquivos .Rhistory e .RData (Exercício 2.2)\nconsole (Exercício 2.4)"
  },
  {
    "objectID": "cap01.html#abordagem-didática",
    "href": "cap01.html#abordagem-didática",
    "title": "1  Entendendo a coleção Estudando o ambiente R",
    "section": "1.4 Abordagem didática",
    "text": "1.4 Abordagem didática\nOs exercícios foram criados sem ordenarmos os assuntos de acordo com os capítulos, para que houvesse conexão de tópicos diferentes na sequência dos exercícios.\nDaremos algumas estratégias para um estudo aprofundado:\n\nEstudar profundamente o assunto abordado em Batista e Oliveira (2022);\nCrie um resumo do assunto (Sugestão):\n\nMapa mental;\nResumo de Cornell;\n\nCriar estratégias de solução simples;\nAprofundar estratégias mais elaboradas, sempre que possível;\nProcurar escrever as soluções por meio do código R, sempre que possível;\nComentar o código."
  },
  {
    "objectID": "cap01.html#exercícios",
    "href": "cap01.html#exercícios",
    "title": "1  Entendendo a coleção Estudando o ambiente R",
    "section": "1.5 Exercícios",
    "text": "1.5 Exercícios\n\nExercício 1.1Qual a diferença entre anexar e carregar um pacote?\n\n\n\nSolução do exercício\nI) Complemento de leitura:\nComo sugestão, recomendamos a leitura do Capítulo 8 (Batista e Oliveira, 2022), R CORE TEAM (2022) e Wickham (2015).\nII) Discussão:\nDois termos muito confundidos no R são: carregar e anexar um pacote. O primeiro termo como o próprio nome sugere, representa a ação de carregar todas as funções, conjunto de dados de um referido pacote. Porém, a nível de usuário, esses objetos não estão disponíveis diretamente, a menos que se use o operador “::”. Para que os objetos de um pacote estejam disponíveis ao usuário, o pacote deve ser anexado, isto é, inserido no caminho de busca (Batista e Oliveira, 2022, p. 247). Por exemplo, quando usamos as funções library() ou require(), estamos sequencialmente carregando e anexando ao caminho de busca o referido pacote. De outro modo, quando anexamos um pacote obrigatoriamente ocorre o carregamento, e posteriormente a anexação ao caminho de busca. Assim, após esta ação, o usuário simplesmente digita o nome de uma determinada função no prompt de comando, sem necessidade de referenciar o nome do pacote anexado (usando o operador ::). Portanto, quando usamos as funções library() ou , dizemos que ``anexamos um pacote’‘, e não’‘carregamos o pacote’’.\nComplementando o que foi discutido anteriormente, Wickham (2015) afirma que:\n\nO carregamento irá carregar o código, dados e quaisquer DLLs1, registra os métodos S3 e S4, e executa a função .onLoad(). Após isso, o pacote fica disponível na memória virtual, mas não acessível no caminho de busca. Daí o usuário não terá como acessar os objetos do pacote diretamente, a menos que use ::, isto é, nome_pacote::nome_função; que por sua vez, o operador :: realiza o carregamento do pacote, se ainda não estiver carregado, e posteriormente, acessa os objetos sem estarem anexados. É bom lembrar que o operador :: não acessa os objetos pelo ambiente package:nome_pacote no caminho de busca, até porque o pacote pode ainda nem ter sido anexado. É muito raro precisar de carregar um pacote explicitamente, a menos que seja necessário saber internamente no seu pacote, se determinado pacote foi carregado2. Caso também seja do interesse acessar funções internas não exportáveis do pacote, podemos usar o operador :::;\nAnexar um pacote significa colocá-lo no caminho de busca. Não é possível anexar um pacote sem primeiro tê-lo carregado, que no caso representa usar uma das funções library() ou require().\n\nIII) Usando o R:3\n\n# Chamando uma funcao sem anexar o pacote 'tcltk'\ntktoplevel()\n\nError in tktoplevel(): não foi possível encontrar a função \"tktoplevel\"\n\n# Chamando tktoplevel() apenas por '::' (Carregando!)\ntcltk::tktoplevel()\n\n$ID\n[1] \".1\"\n\n$env\n&lt;environment: 0x650ba5aad0b8&gt;\n\nattr(,\"class\")\n[1] \"tkwin\"\n\n# Anexando o pacote ao caminho de busca\nsearch() # Verificando o caminho de busca\n\n[1] \".GlobalEnv\"        \"package:stats\"     \"package:graphics\" \n[4] \"package:grDevices\" \"package:utils\"     \"package:datasets\" \n[7] \"package:methods\"   \"Autoloads\"         \"package:base\"     \n\n# Observe que nao existe o ambiente de pacote 'package:tcltk'\nlibrary(tcltk)\nsearch() # Verificando o caminho de busca novamente\n\n [1] \".GlobalEnv\"        \"package:tcltk\"     \"package:stats\"    \n [4] \"package:graphics\"  \"package:grDevices\" \"package:utils\"    \n [7] \"package:datasets\"  \"package:methods\"   \"Autoloads\"        \n[10] \"package:base\"     \n\n# Agora se observa 'package:tcltk'\ntktoplevel() # Chamando sem necessidade de referenciar 'tcltk'\n\n$ID\n[1] \".2\"\n\n$env\n&lt;environment: 0x650ba5cb6dc8&gt;\n\nattr(,\"class\")\n[1] \"tkwin\"\n\n\n\n\n\nExercício 1.2Por que a superatribuição &lt;&lt;- deve ser usada com cautela, principalmente quando se está desenvolvendo funções para um pacote?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.3Qual a importância da estrutura NAMESPACE em um pacote?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.4Por que devemos usar com cautela as funções internas não exportáveis, de um pacote? Como acessá-las? Como usamos uma função de um pacote sem anexá-lo ao caminho de busca? Por que esta última condição é mais interessante, quando se deseja utilizar poucas funções de um pacote?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.5\nQuantos objetos temos na linha de comando a seguir?\n\nx &lt;- 10\n\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.6Quais os três princípios do R? Identifique-os em termos de linhas de comandos criadas em R.\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.7Como salvamos um script? Qual a importância de um script?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.8O que são funções anônimas?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.9Podemos afirmar que sempre o ambiente envolvente e ambiente de chamada são ambientes iguais?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.10Considerando os ambientes envolvente, de execução e de chamada, qual dos três é um ambiente temporário? E quando este ambiente é criado?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.11Baseado na linha de comando: x &lt;- 1, por que não podemos afirmar que “x recebe o valor 1”?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.12Como importamos um banco de dados externo do ambiente R? E como exportamos um resultado desejado?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.13Por que comentar um código é muito importante para um programador?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.14Precisamos ter o RStudio para utilizar o ambiente R?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.15Podemos dizer que uma matriz ou array é um vetor? Se sim, o que os diferenciam?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.16\nConsiderando o script abaixo:\n\n# Criando um nome \"n\" associado a um objeto 10\nn &lt;- 10\nf1 &lt;- function() {\n  print(n) # Imprimindo \"n\"\n  n &lt;- 15 # Criando \"n\" no corpo da funcao\n  print(n) # Imprimindo n\n}\nf1(); n # Imprimindo \"f1\" e \"n\"\n\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.17Podemos afirmar que um data frame é uma lista? Justifique.\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.18Qual a importância de uma boa escrita de um código?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.19Por que o tem como um de seus princípios em sua origem, o princípio da interface?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.20Quais os pacotes R dão suporte como uma interface para as linguagens: Python, Julia, C/C++, FORTRAN, HTML e Java? Quais outros pacotes existem no como uma interface para outras linguagens?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.21O que representa os atributos para um objeto? Quais os dois atributos intrínsecos de um objeto? Qual a importância do atributo class para um objeto?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.22Para que serve os arquivos .RData e .Rhistory? Apresente exemplos práticos sobre o uso desses arquivos.\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.23Qual a relação existente entre o escopo de uma função e os objetos do tipo ambiente (environment)?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.24Como provamos que a função print() está implícita quando executamos uma linha de comando no console?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\nExercício 1.25Qual a diferença entre estrutura de dados e tipo de objetos no ambiente R?\n\n\n\nSolução do exercícioIsso é uma prova!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBATISTA, B. D. O.; OLIVEIRA, D. A. B. J. R básico. 1. ed. Ouro Branco, MG: [s.n.], 2022. p. 321\n\n\nR CORE TEAM. Writing R extensions. Vienna, Austria: [s.n.]. p. 203\n\n\nWICKHAM, H. R Packages. Sebastopol: O’Reilly Media, 2015. p. 202"
  },
  {
    "objectID": "cap01.html#footnotes",
    "href": "cap01.html#footnotes",
    "title": "1  Entendendo a coleção Estudando o ambiente R",
    "section": "",
    "text": "Do inglês, Dynamic Link Library, isto é, um arquivo (biblioteca de vínculo dinâmico) contendo código e dados, do qual estas informações podem ser utilizadas por mais de um programa ao mesmo tempo.↩︎\nNesse caso, não se recomenda utilizar library() ou require() para essa finalidade. Para isso, devemos usar as funções requireNamespace() ou loadNamesoace(), ou inserirmos os pacotes dependentes nos campos Depends, Imports, ou em Sugests no arquivo DESCRIPTION.↩︎\nPor questão de estética do código, simplificamos a representação dos ambientes de pacote de package:&lt;nome\\_pacote&gt; para pack:&lt;nome\\_pacote&gt;.↩︎"
  },
  {
    "objectID": "cap02.html#exercícios",
    "href": "cap02.html#exercícios",
    "title": "2  História e instalação do R",
    "section": "2.1 Exercícios",
    "text": "2.1 Exercícios\n\nExercício 2.1Qual a importância de John Chambers para a linguagem R?\n\n\n\nSolução do exercícioJohn Chambers foi o principal criador da linguagem S, e toda a base programada para a área da estatística no R está fundamentada nessa linguagem, bem como outras ferramentas computacionais. Observamos nos manuais de ajuda dos objetos em R, principalmente os do pacote base, que as referências para a implementação usam em grande parte são os livros do John Chambers, vulgarmente chamados de livros branco, azul e verde.\n\n\n\nExercício 2.2Por que chamamos a linguagem R também de ambiente R?\n\n\n\nSolução do exercícioComo sugestão, podemos pesquisar em https://www.r-project.org/about.html, para complementar as informações contidas neste livro.\n\n\n\nExercício 2.3Pesquise sobre outras IDEs que possam dar suporte ao R.\n\n\n\nSolução do exercícioPodemos realizar uma pesquisa nas páginas de buscas do tipo: “R programming ide”, “IDE for R”, que será encontrado muitas outras opções.\n\n\n\nExercício 2.4Quais as vantagens e cuidados que devemos ter com o ambiente R, sabendo que é uma linguagem de escopo léxico?\n\n\n\nSolução do exercícioComo sugestão, recomendamos a leitura do Capítulo 2, Seção 2.2, e Capítulo 9 (Batista e Oliveira, 2022).\n\n\n\nExercício 2.5O que a superatribuição tem a ver com o escopo léxico?\n\n\n\nSolução do exercícioComo sugestão, recomendamos a leitura do Código 2.4 (Batista e Oliveira, 2022).\n\n\n\nExercício 2.6Poderíamos afirmar que o uso do RStudio para iniciantes em R não seria uma boa escolha para a aprendizagem dessa linguagem?\n\n\n\nSolução do exercícioComo sugestão, recomendamos a leitura do Capítulo 2, Seções 2.2 e 2.3 (Batista e Oliveira, 2022).\n\n\n\nExercício 2.7Qual o objetivo inicial do R, e quais avanços alcançados desse ambiente?\n\n\n\nSolução do exercícioInformações iniciais se encontram no início do referente capítulo, porém podemos pesquisar também em https://www.r-project.org/about.html.\n\n\n\nExercício 2.8Quem criou e onde foi desenvolvida a linguagem R?\n\n\n\nSolução do exercícioComo sugestão, recomendamos a leitura do Capítulo 2, Seção 2.1 (Batista e Oliveira, 2022).\n\n\n\nExercício 2.9O que significa CRAN e qual a sua finalidade?\n\n\n\nSolução do exercícioAlém da leitura inicial deste capítulo, podemos pesquisar em https://cran.r-project.org/.\n\n\n\nExercício 2.10Qual a importância das linguagens C, FORTRAN e S para o ambiente R?\n\n\n\nSolução do exercícioTerceiro princípio do R: Princípio da interface (Batista e Oliveira, 2022).\n\n\n\n\n\n\nBATISTA, B. D. O.; OLIVEIRA, D. A. B. J. R básico. 1. ed. Ouro Branco, MG: [s.n.], 2022. p. 321"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Referências",
    "section": "",
    "text": "BATISTA, B. D. O.; OLIVEIRA, D. A. B. J. R básico. 1.\ned. Ouro Branco, MG: [s.n.], 2022. p. 321\n\n\nR CORE TEAM. Writing R\nextensions. Vienna, Austria: [s.n.]. p. 203\n\n\nWICKHAM, H. R\nPackages. Sebastopol: O’Reilly Media, 2015. p. 202"
  }
]